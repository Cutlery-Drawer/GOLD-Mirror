<html>

<head>
<link REL="STYLESHEET" HREF="../gold-parser-doc-style.css">
<base target="_self">
<title>Reduce-Reduce Conflict</title>
</head>

<body class="ssMainPage">

<h1>Reduce-Reduce Conflict</h1>

<h2>Overview</h2>

<p>A Reduce-Reduce error is a caused when a grammar allows two or more different rules to
be reduced at the same time, for the same token. When this happens, the grammar becomes
ambiguous since a program can be interpreted more than one way. This error can be caused
when the same rule is reached by more than one path.</p>

<h2>The Lookahead Set</h2>

<p>The Lookahead Set is used by the LALR construction algorithm to determine when to
&quot;reduce&quot; a rule. When a configuration is complete - (e.g. the cursor is past the
last symbol), the LALR algorithm reduces the rule for each token in the set. This
information is stored as a series of &quot;reduce&quot; actions in the LALR state. </p>

<p>When a token is read by the LALR algorithm, it looks up token in the current state and
then performs the associated action. If an entry exists with a &quot;shift&quot; action,
the system will push the token on an internal stack and jump to the specified state. If a
&quot;reduce&quot; action is found, the associated rule is reduced and passed to the
developer. If the token is not found in the state, a syntax error occurs. </p>

<p>Naturally, there can only be one action for any given state. For example, if a
programming language contains a terminal for the reserved word &quot;while&quot;, only one
entry for &quot;while&quot; can exist in the state. A shift-reduce action, therefore, is
caused when the system does not know if to &quot;shift&quot; or &quot;reduce&quot; for a
given token.</p>

<p>For more information, please consult a book on compiler theory.</p>
</body>
</html>
