<html>

<head>
<title>Parser Engine Code Skeleton: C++</title>
<link REL="STYLESHEET" HREF="gold-engine-doc-style.css">
</head>

<body class="ssMainPage">

<h1>Parser Engine Code Skeleton: C++</h1>

<p>&nbsp;</p>

<p>The following contains the essential C++ code needed to interact with the GOLDParser
object. This documentation also contains the code for: 

<ul>
  <li><a href="engine-skeleton-vb6.htm">Visual Basic 6</a> and</li>
  <li><a href="engine-skeleton-vb-net.htm">Visual Basic .NET</a></li>
</ul>

<p>&nbsp;</p>
<div align="center"><center>

<table width="90%" class="ssCodeTable">
  <tr>
    <td width="100%" nowrap class="ssCodeTableBody"><code><font color="#008000">//C++ Source
    Code<br>
    </font><br>
    GOLDParser parser = <font color="#000080">new </font>GOLDParser();<br>
    GPMessageConstants response;<br>
    bool done;<br>
    <br>
    parser.LoadCompiledGrammar (&quot;grammar.cgt&quot;);<br>
    parser.OpenFile (&quot;Program.txt&quot;);<br>
    done = <font color="#000080">FALSE</font>;<br>
    <br>
    <font color="#000080">while </font>(!done) <br>
    <font color="#000080">{</font><br>
    &nbsp;&nbsp; response = parser.Parse();<br>
    <br>
    &nbsp;&nbsp; <font color="#000080">switch</font>(response)<br>
    &nbsp;&nbsp; <font color="#000080">{</font><br>
    &nbsp;&nbsp;&nbsp; &nbsp; <font color="#000080">case</font> gpMsgLexicalError:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <font color="#008000">/* Place code here to
    handle a illegal or unrecognized token <br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; To recover, pop the token
    from the stack: Parser.PopInputToken */</font><br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    <font color="#000080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case</font> gpMsgSyntaxError:<br>
    <font color="#008000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; /* This is a syntax
    error: the source has produced a token that was<br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; not expected by the LALR
    State Machine. The expected tokens are stored<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; into the Tokens() list. To
    recover, push one of the<br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; expected tokens onto the
    parser's input queue (the first in this case):<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; You should limit the number
    of times this type of recovery can take <br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; place. */<br>
    </font><font color="#000000">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    Parser.PushInputToken(Parser.Tokens(0));</font><font color="#008000"><br>
    </font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#000080"> break</font>;<br>
    <br>
    <font color="#000080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case</font> gpMsgReduction:&nbsp;<br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; <font color="#008000">/* This message is
    returned when a rule was reduced by the parse engine.<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The CurrentReduction
    property is assigned a Reduction object<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; containing the rule and
    its related tokens. You can reassign this<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; property to your own
    customized class. If this is not the case,<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this message can be
    ignored and the Reduction object will be used<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; to store the parse
    tree.&nbsp; */</font><br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">switch</font>(Parser.CurrentReduction.ParentRule.TableIndex)
    <br>
    <font color="#000080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</font><br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#800000">...</font><br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <font color="#000080">}</font><br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Parser.CurrentReduction = <font color="#008000">//Object you created to store the rule</font><br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">case</font> gpMsgAccept:<br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#008000">/* The program was
    accepted by the parsing engine */</font><br>
    <br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; done = <font color="#000080">TRUE</font>;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">case</font> gpMsgCommentError:<br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#008000">/* The end of the input
    was reached while reading a comment.<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This is caused by a comment
    that was not terminated */</font><br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    &nbsp;&nbsp;&nbsp; &nbsp; <font color="#000080">case</font> gpMsgTokenRead:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <font color="#008000">/* A token was read by
    the parser. The Token Object can be accessed through<br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the CurrentToken()
    property:&nbsp; Parser.CurrentToken */<br>
    </font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    &nbsp;&nbsp; &nbsp;&nbsp; <font color="#000080">case</font> gpMsgInternalError:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <font color="#008000">/* Something horrid
    happened inside the parser. You cannot recover */</font><br>
    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; done = <font color="#000080">TRUE</font>;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    &nbsp;&nbsp;&nbsp; &nbsp; <font color="#000080">case</font> gpMsgNotLoadedError:<br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#008000">/* Load the Compiled
    Grammar Table file first. */</font><br>
    &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; done = <font color="#000080">TRUE</font>;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    <font color="#000080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case</font> gpMsgCommentBlockRead:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <font color="#008000">/* A block comment was
    read by the parser. The content of the comment<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is stored in the
    CurrentComment() property */</font><br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    <br>
    <font color="#000080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case</font> gpMsgCommentLineRead:<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <font color="#008000">/* A block comment was
    read by the parser. The content of the comment<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is stored in the
    CurrentComment() property */</font><br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#000080">break</font>;<br>
    &nbsp;&nbsp; &nbsp;&nbsp; <font color="#000080">}</font><br>
    <br>
    <font color="#000080">}</font>&nbsp; <font color="#008000">//while</font><br>
    </code></td>
  </tr>
</table>
</center></div>
</body>
</html>
