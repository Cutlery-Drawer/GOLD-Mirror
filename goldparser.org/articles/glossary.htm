<html>

<head>
<meta NAME="GENERATOR" Content="Microsoft FrontPage 12.0">
<meta http-equiv="X-UA-Compatible" content="IE=9">

<link REL="STYLESHEET" HREF="../gold-parser-style.css">
<title>GOLD Parsing System - Glossary</title>
</head>

<body leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" bgcolor="#FFFFFF">

<table border="0" cellpadding="0" cellspacing="0" width="100%" class="ssMainContentTop">
  <tr>
    <td valign="top" class="ssMainTitleCell" colspan="2" height="110"><table border="0" cellspacing="0" cellpadding="0" class="ssTitleTable">
      <tr>
        <td class="ssTitleLogoCell" rowspan="2"><img src="../images/gold-logo-v4-100.png" alt="The Tower Bridge in Sacramento, California" WIDTH="100" HEIGHT="100"></td>
        <td class="ssTitleTopicCell">Parsing Concepts</td>
        <td class="ssTitleGraphicCell" rowspan="2"><img src="../images/pic-title-graphic.png" WIDTH="200" HEIGHT="110"></td>
      </tr>
      <tr>
        <td class="ssTitleDescCell">Glossary</td>
      </tr>
    </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="ssMainContentTop" colspan="2"></td>
  </tr>
  <tr valign="top">
    <td valign="top" align="center" class="ssMainMenuCell" width="150"><table class="ssMenuTable" border="0" cellspacing="0">
      <tr>
        <td valign="bottom" class="ssMenuTitleCell" colspan="2">
		<a href="../index.htm">Main</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-news.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell"><a href="../news/index.htm">Latest News</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-getting-started.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="../getting-started/index.htm">Getting
        Started</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell">
		<img src="../images/bullets/bullet-picture.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a href="../builder/screenshots.htm">Screen Shots</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-disk.gif" border="0" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a href="../download.htm" target="_top">Download</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-help.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell"><a href="../doc/index.htm">Documentation</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-contributor.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="../contributors/index.htm">Contributors</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-contact.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="../contact.htm">Contact</a></td>
      </tr>
    </table>
    <table class="ssMenuTable" border="0" cellspacing="0">
      <tr>
        <td valign="bottom" class="ssMenuTitleCell" colspan="2">
		<a href="../about/index.htm">About GOLD</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-information.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a href="../about/how-it-works.htm" target="_top">How
        It Works</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-information.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a href="../about/faq.htm" target="_top">FAQ</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-information.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="../about/why-use-gold.htm">Why
        Use GOLD?</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-information.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a href="../about/comparison-parsers.htm" target="_top">Comparison</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-information.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a href="../about/revision-history.htm" target="_top">Revision History</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-information.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="../about/license.htm">Freeware
        License</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-information.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="../about/index.htm">More ...</a></td>
      </tr>
    </table>
    <div align="center"><center><table border="0" class="ssMenuTable" cellspacing="0" cellpadding="0">
      <tr>
        <td valign="bottom" class="ssMenuTitleCell" colspan="2">
		<a href="index.htm">Articles</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-article.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="parser.htm">What
        is a Parser?</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-article.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell"><a href="bnf.htm">Backus-Naur Form</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-article.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell"><a href="dfa.htm">DFA Lexer</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-article.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell"><a href="lalr.htm">LALR Parsing</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-article.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell"><a href="glossary.htm">Glossary</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-article.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="links.htm">Links</a></td>
      </tr>
      <tr>
        <td valign="middle" class="ssMenuBodyCell" align="left">
		<img src="../images/bullets/bullet-article.gif" WIDTH="11" HEIGHT="11"></td>
        <td valign="top" class="ssMenuBodyCell">
		<a target="_top" href="index.htm">More
        ...</a></td>
      </tr>
    </table>
    </center></div><p><br>
    </p>
    <p align="center">
	<img src="../images/spacer-150.gif" border="0" WIDTH="150" HEIGHT="4"></td>
    <td valign="top" class="ssMainContentCell" align="center">This page contains a short
    description of a number of different parsing terms and concepts.<p>&nbsp;</p>
    <div align="center"><center><table border="0" width="100%" class="ssListTable" cellspacing="0" cellpadding="0">
      <tr>
        <td class="ssListItemCell" nowrap><a name="BackusNaur"></a><span class="ssListHeaderText">Backus-Naur
        Form</span></td>
        <td class="ssListDescCell">Backus-Naur Form is a notation used to describe the syntax of
        programming languages. For more information, please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="bnf.htm">Grammar and Backus-Naur Form</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="BigEndian"></a><span class="ssListHeaderText">Big
        Endian Byte<br>
        Ordering</span></td>
        <td class="ssListDescCell">Big Endian Byte Ordering is a binary storage format where the
        most significant byte is stored in lower memory. This is the format used by the Motorola
        family of processors. For more information, please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="byte-ordering.htm">Byte Ordering</a> page.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Configuration"></a><span class="ssListHeaderText">Configuration</span></td>
        <td class="ssListDescCell">In parsing terms, a configuration is a rule production in the
        process of being completed. Configurations play a major role in the construction of <a href="glossary.htm#LRParsing">LR parse</a> tables.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="CFG"></a><span class="ssListHeaderText">Context
        Free Grammars</span></td>
        <td class="ssListDescCell">Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="bnf.htm">Grammar and Backus-Naur
        Form</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="CFG"></a><span class="ssListHeaderText">Deterministic
        Finite <br>
        Automata</span></td>
        <td class="ssListDescCell">A Deterministic Finite Automaton is often used to analyze a
        series of characters.&nbsp; Often it is implemented using state driven transition graph.
        Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="dfa.htm">Deterministic Finite Automata</a> page for more information.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Grammar"></a><span class="ssListHeaderText">Grammar</span></td>
        <td class="ssListDescCell">Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="bnf.htm">Grammar and Backus-Naur
        Form</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="LALRParsing"></a><span class="ssListHeaderText">LALR
        Parsing</span></td>
        <td class="ssListDescCell">LALR Parsing, or &quot;<u>L</u>ook<u>a</u>head LR
        parsing&quot;, is a variant of <a href="glossary.htm#LR Parsing">LR Parsing</a> that
        combines different &quot;configurations&quot; to limit the size of the parse tables. As a
        result, the algorithm is slightly less powerful than the LR Parsing. Grammars that can be
        parsed by a LR parser, might be found to be &quot;ambiguous&quot; by LALR. However, this
        is very rarely the case and real-world examples are few. <p>The number of states
        eliminated by LALR are sometimes huge. The C programming language, for instance, has over
        10,000 LR states. LALR drops this number to slightly more than 200. </p>
        <p>For more information, please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="lalr.htm">LALR Algorithm</a> page.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="LittleEndian"></a><span class="ssListHeaderText">Little Endian Byte<br>
        Ordering</span></td>
        <td class="ssListDescCell">Little Endian Byte Ordering is a binary storage format where
        the least significant byte is stored in lower memory. This is the format used by the Intel
        family of processors. For more information, please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="byte-ordering.htm">Little Endian Byte Ordering</a> page.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="LLParsing"></a><span class="ssListHeaderText">LL
        Parsing</span></td>
        <td class="ssListDescCell">LL Parsing, or <strong><u>L</u></strong>eft-to-right <u><strong>L</strong></u>eft-derivative
        parsing, refers to a class of parsers that analyze text using a top-down algorithm. <p>LL
        Parsers have the advantage of being very simple in the design - at least conceptually.
        Unlike LR Parsers, the system does not need to generate tables ahead of time. Instead,
        only a set of rules and lookahead data is needed.</p>
        <p>However, LL Parsers are not as powerful as <a href="glossary.htm#LRParsing">LR parsers</a>.
        Rules cannot have left-recursion since it causes problems with the recursive decent
        algorithm. In addition, LL Parsers are known as memory intensive and slow. Both of these
        are due to the &quot;search&quot; nature of the algorithm. Optimization is possible, but
        the complexity of the LL Parser runtime engine increases dramatically.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="LRParsing"></a><span class="ssListHeaderText">LR
        Parsing</span></td>
        <td class="ssListDescCell">LR Parsing, or <strong><u>L</u></strong>eft-to-right <u><strong>R</strong></u>ight-derivative
        parsing, uses tables to determine when a rule is complete and when additional tokens are
        needed to be read from the source. Unlike <a href="glossary.htm#LLParsing">LL Parsing</a>,
        the LR Parser does very little &quot;thinking&quot; at runtime. All decisions are based on
        the content of the parse tables. As a result, LR Parsing is faster and more memory
        efficient than LL Parsing.<p>The construction of these tables where all the
        &quot;thinking&quot; takes place. LR parser generators, such as YACC and GOLD, construct
        these tables by analyzing the grammar and determining all the possible &quot;states&quot;
        the system can be in when parsing. </p>
        <p>Each state represents a point in the parse process where a number of tokens have been
        read from the source and rules are in different states of completion. Each production in a
        state of completion is called a &quot;configuration&quot; and each state is really a
        configuration set.</p>
        <p>LR parse tables can be huge, and, as a result, often a variant of LR Parsing is used.
        For more information, please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="lalr.htm">LALR Algorithm</a> page.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Nonterminal"></a><span class="ssListHeaderText">Nonterminal</span></td>
        <td class="ssListDescCell">Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="bnf.htm">Grammar and Backus-Naur
        Form</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="NullableRule"></a><span class="ssListHeaderText">Nullable Rule</span></td>
        <td class="ssListDescCell">A nullable rule is a type of<a href="glossary.htm#Rule"> rule</a>
        which is optional, or in other words, can contain no symbols. In the GOLD Meta-Language, a
        nullable rule can be specified by adding a blank entry:<blockquote>
          <table border="0" class="ssCodeTable" cellspacing="0" cellpadding="0">
            <tr>
              <td width="100%" class="ssCodeTableBody" nowrap><span class="ssCodeText"><code>&lt;Optional
              ID&gt; ::= Identifier<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></span></td>
            </tr>
          </table>
        </blockquote>
        </td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Parser"></a><span class="ssListHeaderText">Parser</span></td>
        <td class="ssListDescCell">A parser is software, such as a procedure or library, that
        organizes text into a set of logical units used by a programming language. Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="parser.htm">What is a Parser</a> page for more information.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="ParserGenerator"></a><span class="ssListHeaderText">Parser Generator</span></td>
        <td class="ssListDescCell">A parser generator is a generic term that refers to any
        software program that helps develop a working parser. Examples include the GOLD, YACC and
        ANTLR.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Production"></a><span class="ssListHeaderText">Production</span></td>
        <td class="ssListDescCell">Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="bnf.htm">Grammar and Backus-Naur
        Form</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="ReduceReduceConflict"></a><span class="ssListHeaderText">Reduce-Reduce<br>
        Conflict</span></td>
        <td class="ssListDescCell">A Reduce-Reduce Conflict is a caused when a grammar allows two
        or more different<a href="glossary.htm#Rule"> rules</a> to be reduced at the same time,
        for the same token. When this happens, the grammar becomes ambiguous since a program can
        be interpreted more than one way.<p>For instance, assume you have the following grammar:</p>
        <blockquote>
          <table border="0" class="ssCodeTable" cellspacing="0" cellpadding="0">
            <tr>
              <td width="100%" class="ssCodeTableBody" nowrap><span class="ssCodeText"><code>&lt;S&gt;
              ::= &lt;A&gt; | &lt;B&gt;<br>
              <br>
              &lt;A&gt; ::= Identifier<br>
              &lt;B&gt; ::= Identifier</code></span></td>
            </tr>
          </table>
        </blockquote>
        <p>When the system reads an identifier, it cannot determine if it has completed <span class="ssCodeText"><code>&lt;A&gt;</code></span> or<span class="ssCodeText"><code>&lt;B&gt;</code></span>.
        </p>
        <p>When a <a href="glossary.htm#LALRParsing">LALR</a> parser generator is analyzing a
        grammar and constructing the parse tables, these conflicts are located immediately.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="RegularExpression"></a><span class="ssListHeaderText">Regular Expression</span></td>
        <td class="ssListDescCell">A Regular Expression is a notation used describe patterns of
        characters. In programming language theory, they are often used to describe a languages'
        terminals. For more information, please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="regular-expressions.htm">Regular
        Expression</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Rule"></a><span class="ssListHeaderText">Rule</span></td>
        <td class="ssListDescCell">Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="bnf.htm">Grammar and Backus-Naur
        Form</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Semantics"></a><span class="ssListHeaderText">Semantics</span></td>
        <td class="ssListDescCell">The semantics of a programming language refers to how the
        actual statements, constructs, etc... are interpreted. This is quite different from the <a href="glossary.htm#Syntax">syntax</a> of a programming language which refers to how
        different symbols and reserved words are arranged.<p>For instance, in both Visual Basic
        and C++, the following is a valid expression:</p>
        <blockquote>
          <table border="0" class="ssCodeTable" cellspacing="0" cellpadding="0">
            <tr>
              <td width="100%" class="ssCodeTableBody"><span class="ssCodeText"><code>a &amp; b</code></span></td>
            </tr>
          </table>
        </blockquote>
        <p>Even though the syntax is the same between the two languages, the semantics are quite
        different. In C++, this expression is interpreted as a binary-and of &quot;a&quot; and
        &quot;b&quot;. In Visual Basic, however, this expression returns the concatenation of two
        strings.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Syntax"></a><span class="ssListHeaderText">Symbol</span></td>
        <td class="ssListDescCell">In parsing terms, a symbol is the building block of a grammar
        and can be either a <a href="glossary.htm#Terminal">terminal</a> or <a href="glossary.htm#Nonterminal">nonterminal</a>. Essentially, the term &quot;symbol&quot;
        is used to refer to either of its two forms.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Syntax"></a><span class="ssListHeaderText">Syntax</span></td>
        <td class="ssListDescCell">The term &quot;syntax&quot; refers to the structure of a
        programming language, in particular, the different series of symbols and words that make
        up the basic parts of the language. This is quite different from the programming
        language's<a href="glossary.htm#Semantics"> semantics</a> - the actual meaning of those
        different parts.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Shift"></a><span class="ssListHeaderText">Shift</span></td>
        <td class="ssListDescCell">A &quot;shift&quot; is an action performed by a parsing engine
        when it reads a token that is valid in the current state.&nbsp; <a href="glossary.htm#Lookahead">Lookahead</a> parsers maintain a list of<a href="glossary.htm#Terminal"> terminals</a> which are expected to be read from each state,
        given that the syntax of the program is correct. If the token is not the expected, a
        syntax error occurs.<p>In the bottom-up parser engines, such as GOLD and YACC, a shift
        pushes the token onto an internal stack that is used to hold tokens that are being used to
        construct <a href="glossary.htm#CompletedRule">completed rules</a>.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="ShiftReduceConflict"></a><span class="ssListHeaderText">Shift-Reduce<br>
        Conflict</span></td>
        <td class="ssListDescCell">The Shift-Reduce Conflict is the most common type of conflict
        found in grammars. It is caused when the grammar allows a <a href="glossary.htm#Rule">rule</a>
        to be <a href="glossary.htm#Reduce">reduced</a>&nbsp; for particular token, but, at the
        same time, allowing another rule to be <a href="glossary.htm#Shift">shifted</a> for that
        same token.<p>As a result, the grammar is ambiguous since a program can be interpreted
        more than one way.</p>
        <p>This error is often caused by recursive grammar definitions where the system cannot
        determine when one rule is complete and another is just started. The Builder documentation
        contains an <img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="../doc/grammars/index-example-if-then-else.htm">example</a> of
        the common if-then-else grammar problem and how to fit it.</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Terminal"></a><span class="ssListHeaderText">Terminal</span></td>
        <td class="ssListDescCell">In Backus-Naur Form, a terminal is used to denote a programming
        language's reserved words and symbols. Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="bnf.htm">Grammar and Backus-Naur Form</a> page</td>
      </tr>
      <tr>
        <td class="ssListItemCell" nowrap><a name="Unicode"></a><span class="ssListHeaderText">Unicode</span></td>
        <td class="ssListDescCell">Please see the<img src="../images/inline-link.gif" alt="inline-arrow-r.gif (99 bytes)" hspace="3" WIDTH="5" HEIGHT="9"><a href="character-sets.htm">Unicode</a>
        page</td>
      </tr>
    </table>
    </center></div><p>&nbsp;</td>
  </tr>
</table>
</body>
</html>
